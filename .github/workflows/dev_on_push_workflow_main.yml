name: Initiate workflow

on:
  push:
    branches:
      - main
    tags: "**"
  pull_request:

jobs:
  fetch_secrets:
    runs-on: ubuntu-latest
    outputs:
      cosign_kms_key: ${{ steps.secrets.outputs.COSIGN_KMS_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: Authentification to Google to get secret
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_EHP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_EHP_SERVICE_ACCOUNT }}
      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            COSIGN_KMS_KEY:passculture-metier-ehp/cosign_kms_key
  run_public_website_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "public_website/.nvmrc"
      - name: Install global dependencies
        run: yarn install
      - name: Install public_website dependencies
        run: cd public_website && yarn install
      - name: Lint public_website
        run: cd public_website && yarn test:lint
      - name: Test typescript
        run: cd public_website && yarn test:types
      - name: Test public_website
        run: cd public_website && yarn test
  run_content_management_system_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: "content_management_system/.nvmrc"
      - name: Install global dependencies
        run: yarn install
      - name: Install content_management_system dependencies
        run: cd content_management_system && yarn install
      - name: Lint content_management_system
        run: cd content_management_system && yarn test:lint
      - name: Test typescript
        run: cd content_management_system && yarn test:types
  build-image-cms:
    uses: pass-culture/common-workflows/.github/workflows/build-docker-image.yml@main
    needs:
      - fetch_secrets
    permissions:
      id-token: write
      contents: write
    with:
      image: pc-institutional 
      push: true 
      context: content_management_system
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      COSIGN_KMS_KEY: ${{ needs.fetch_secrets.outputs.cosign_kms_key }}
  build-image-public-site-preview:
    uses: pass-culture/common-workflows/.github/workflows/build-docker-image.yml@main
    needs:
      - fetch_secrets
    permissions:
      id-token: write
      contents: write
    with:
      image: pc-institutional-public-site-preview
      push: true 
      context: public_website
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      ARTIFACT_REGISTRY_SERVICE_ACCOUNT: ${{ secrets.ARTIFACT_REGISTRY_SERVICE_ACCOUNT }}
      COSIGN_KMS_KEY: ${{ needs.fetch_secrets.outputs.cosign_kms_key }}

