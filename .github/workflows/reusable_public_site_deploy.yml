name: Deploy public site
on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: Environment to deploy
        required: true
      workload_identity_provider_secret_name:
        type: string
        description: Secret name to retrieve the workload identity provider
        required: true
      cms_url:
        type: string
        description: URL where Strapi is available to generate the static website
        required: true
      backend_url:
        type: string
        description: Pass culture backend URL to fetch playlists from
        required: true
      secrets_project_id:
        type: string
        description: GCP project to retrieve secrets from
        required: true
    secrets:
      SECRETS_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SECRETS_SERVICE_ACCOUNT:
        required: true

env:
  FIREBASE_CLI_VERSION: 13.0.3

permissions:
  id-token: write
  contents: read

jobs:
  deploy-static-site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.SECRETS_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SECRETS_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Get Secret
        id: "secrets"
        uses: "google-github-actions/get-secretmanager-secrets@v2"
        with:
          secrets: |-
            INSTIT_SITE_DEPLOY_SA:${{ inputs.secrets_project_id }}/passculture-institutional_${{ inputs.environment }}_deploy-service-account
            IAP_CLIENT_ID:${{ inputs.secrets_project_id }}/passculture-institutional_${{ inputs.environment }}_iap-client-id
            GCP_WORKLOAD_IDENTITY_PROVIDER:${{ inputs.workload_identity_provider_secret_name }}

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        id: auth
        with:
          workload_identity_provider: ${{ steps.secrets.outputs.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.INSTIT_SITE_DEPLOY_SA }}
          create_credentials_file: true
          token_format: id_token
          id_token_audience: ${{ steps.secrets.outputs.IAP_CLIENT_ID }}
          id_token_include_email: true

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      # Generate static site into dist folder
      - name: "Install dependencies and build"
        working-directory: public_website
        env:
          NEXT_PUBLIC_STRAPI_API_URL: ${{ inputs.cms_url }}
          NEXT_PUBLIC_BACKEND_API_URL: ${{ inputs.backend_url }}
          ID_TOKEN: ${{ steps.auth.outputs.id_token }}
        run: |
          yarn install
          yarn build

      - name: "Setup firebase"
        run: |
          npm install -g firebase-tools@${{ env.FIREBASE_CLI_VERSION }}

      - name: "Push website to bucket"
        working-directory: public_website
        run: |
          firebase use pc-site-instit-${{ inputs.environment }} 
          firebase deploy --only hosting:${{ inputs.environment }} --project pc-site-instit-${{ inputs.environment }} --non-interactive

  notification:
    name: "Notification"
    runs-on: ubuntu-latest
    needs: [deploy-static-site]
    if: ${{ always() }}
    steps:
      - name: "Authentification to Google"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.SECRETS_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SECRETS_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: "secrets"
        uses: "google-github-actions/get-secretmanager-secrets@v2"
        with:
          secrets: |-
            SLACK_BOT_TOKEN:${{ inputs.secrets_project_id }}/passculture-ci-slack-bot-token
      - name: "Post to a Slack channel on success"
        if: ${{ always() && contains(needs.deploy-static-site.result, 'success') }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #alertes-deploiement-site-instit
          channel-id: "C06EKUL552T"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#36A64F",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "Site instit public",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Le site instit vient d'être déployé en ${{ inputs.environment }} :white_check_mark:"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
      - name: "Post to a Slack channel on failure"
        if: ${{ always() && contains(needs.deploy-static-site.result, 'failure') }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #alertes-deploiement-site-instit
          channel-id: "C06EKUL552T"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#A30002",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "Site instit public",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Le déploiement du site instit vient d'échouer en ${{ inputs.environment }} :boom:"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
