name: Deploy public site
on:
  workflow_call:
    inputs:
      project_id:
        type: string
        description: GCP Project id to use 
        required: true
      environment:
        type: string
        description: Environment to deploy
        required: true
      image_tag:
        type: string
        description: Image tag to deploy
        required: true
      workload_identity_provider_secret_name:
        type: string
        description: Secret name to retrieve the workload identity provider
        required: true
      teleport_version:
        type: string
        required: true
      teleport_proxy:
        type: string
        required: true
      teleport_kubernetes_cluster:
        type: string
        required: true
      argocd_version:
        type: string
        required: false
        default: v2.8.4
      secrets_project_id:
        type: string
        description: GCP project to retrieve secrets from
        required: true
    secrets:
      SECRETS_WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SECRETS_SERVICE_ACCOUNT:
        required: true

permissions:
  id-token: write
  contents: read 

jobs:
  deploy-cms:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.SECRETS_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SECRETS_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Get Secret
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            INSTIT_SITE_DEPLOY_SA:${{ inputs.secrets_project_id }}/passculture-institutional_${{ inputs.environment }}_deploy-service-account
            GCP_WORKLOAD_IDENTITY_PROVIDER:${{ inputs.workload_identity_provider_secret_name }}

      - name: "Generate and push rendered manifests"
        uses: pass-culture/common-workflows/actions/render-push-manifests@render-push-manifests/v2.0.0
        with:
          environment: ${{ inputs.environment }}
          app_name: site-instit 
          app_version: ${{ inputs.image_tag }}
          registry_workload_identity_secret_name: ${{ inputs.workload_identity_provider_secret_name }}
          registry_service_account_secret_name: ${{ inputs.secrets_project_id }}/passculture-institutional_${{ inputs.environment }}_deploy-service-account
          api_token_github_secret_name: ${{ inputs.secrets_project_id }}/passculture-institutional_${{ inputs.environment }}_github_token
          chart_values_repository: pass-culture/infrastructure
          chart_values_repository_ref: main
          helmfile_path: helm/site-instit
          additional_args: deployment.image.tag=${{ inputs.image_tag }}

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ steps.secrets.outputs.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ steps.secrets.outputs.INSTIT_SITE_DEPLOY_SA }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'


      - name: Sync argoCD application 
        uses: pass-culture/common-workflows/actions/argocd-sync@argocd-sync/v0.1.0
        with:
          app_name: site-instit-${{ inputs.environment }}
          teleport_proxy: ${{ inputs.teleport_proxy }} 
          teleport_kubernetes_cluster: ${{ inputs.teleport_kubernetes_cluster }} 

  notification:
    name: "Notification"
    runs-on: ubuntu-latest
    needs: [deploy-cms]
    if: ${{ always() }}
    steps:
      - name: "Authentification to Google"
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.SECRETS_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SECRETS_SERVICE_ACCOUNT }}
      - name: "Get Secret"
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            SLACK_BOT_TOKEN:${{ inputs.secrets_project_id }}/passculture-ci-slack-bot-token
      - name: "Post to a Slack channel on success"
        if: ${{ always() && contains(needs.deploy-cms.result, 'success') }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #alertes-deploiement-site-instit
          channel-id: "C06EKUL552T"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#36A64F",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "CMS Site instit",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Le CMS du site instit vient d'être déployé en ${{ inputs.environment }} :white_check_mark:"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}
      - name: "Post to a Slack channel on failure"
        if: ${{ always() && contains(needs.deploy-cms.result, 'failure') }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # channel #alertes-deploiement-site-instit
          channel-id: "C06EKUL552T"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text"],
                  "color": "#A30002",
                  "author_name": "${{github.actor}}",
                  "author_link": "https://github.com/${{github.actor}}",
                  "author_icon": "https://github.com/${{github.actor}}.png",
                  "title": "CMS Site Instit",
                  "title_link": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
                  "text": "Le déploiement du CMS site instit vient d'échouer en ${{ inputs.environment }} :boom:"
                }
              ],
              "unfurl_links": false,
              "unfurl_media": false
            }
        env:
          SLACK_BOT_TOKEN: ${{ steps.secrets.outputs.SLACK_BOT_TOKEN }}

